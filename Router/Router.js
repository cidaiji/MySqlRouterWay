const http=require("http"),https=require("https"),fs=require("fs"),path=require("path"),ini=require("ini");class ConfigDrivenProxyServer{constructor(){this.server=null,this.config={},this.configPath=path.join(__dirname,"Conf","Router.ini"),this.startAttempts=new Map,this.maxAttempts=2e4,this.init()}log(e,t,r="",s=""){var o=(new Date).toLocaleTimeString("zh-CN",{hour12:!1}),i={info:"信息",error:"错误",warn:"警告"};r?console.log(`[${o}] [${i[e]}] ${t} "${r}" `+s):console.log(`[${o}] [${i[e]}] `+t)}init(){fs.existsSync(this.configPath)||(this.log("error","配置文件不存在: Conf/Router.ini"),this.log("info","请确保配置文件存在后重新启动服务器"),process.exit(1)),this.loadConfig(),this.setupConfigWatcher(),this.startServer(),this.setupGracefulShutdown()}loadConfig(){try{var e=fs.readFileSync(this.configPath,"utf-8");const o=ini.parse(e);if(this.config={server:{},routes:[],errors:{}},Object.keys(o).forEach(e=>{const t=o[e];var r,s;e.includes("服务器配置")||e.toLowerCase().includes("server")?this.config.server={port:parseInt(t.port||t.端口),domain:t.domain||t.域名,mustInDomain:"True"===(t["must in domain"]||t["必须在域名内"])}:e.includes("错误")||e.toLowerCase().includes("error")?Object.keys(t).forEach(e=>{this.config.errors[e]=t[e]}):(t.From||t.FROM||t.from)&&(s=t.From||t.FROM||t.from,r=t.TO||t.To||t.to,s)&&r&&(s=s.match(/(?:Port|port|端口):(\d+)/i))&&(e={name:e,port:parseInt(s[1]),path:r,priority:"/"===r?999:r.split("/").length},this.config.routes.push(e))}),!this.config.server.port)throw new Error("配置文件中未找到端口配置，请检查 [本服务器配置] 段是否包含 port = 端口号");if(0===this.config.routes.length)throw new Error("配置文件中未找到任何路由配置，请检查路由段是否包含 From = Port:端口号 和 TO = 路径");this.config.routes.sort((e,t)=>e.priority-t.priority)}catch(e){this.log("error","配置文件解析失败: "+e.message),this.log("info","请检查配置文件格式是否正确"),process.exit(1)}}setupConfigWatcher(){fs.watchFile(this.configPath,{interval:1e3},(e,t)=>{if(e.mtime!==t.mtime)try{this.reload()}catch(e){this.log("error","重新加载失败: "+e.message)}})}proxyRequest(r,o,i,n,h){return new Promise(s=>{var e=new URL("http://localhost:"+i+n),e={hostname:e.hostname,port:e.port,path:e.pathname+e.search,method:r.method,headers:{...r.headers}};delete e.headers.host;const t=http.request(e,e=>{o.writeHead(e.statusCode,e.headers),e.pipe(o),s()});t.on("error",e=>{this.log("error",`代理错误 [${h}]: `+e.message);let t="Server Down",r=500;"ECONNREFUSED"===e.code||"ENOTFOUND"===e.code?(t="Server Down",r=502):"ETIMEDOUT"!==e.code&&"ESOCKETTIMEDOUT"!==e.code||(t="Time Out",r=504),this.serveErrorPage(o,t,r),s()}),t.setTimeout(3e4,()=>{t.destroy(),this.serveErrorPage(o,"Time Out",504),s()}),"GET"!==r.method&&"HEAD"!==r.method?r.pipe(t):t.end()})}startServer(){this.config.routes.forEach(e=>{this.startAttempts.has(e.name)||this.startAttempts.set(e.name,0)}),this.server=http.createServer(async(e,t)=>{var r,s=new URL(e.url,"http://"+e.headers.host),o=e.headers.host;if(this.config.server.mustInDomain&&this.config.server.domain&&o&&!o.includes(this.config.server.domain))t.writeHead(403,{"Content-Type":"application/json"}),t.end(JSON.stringify({error:"Access Denied",message:"must in domain",allowedDomain:this.config.server.domain}));else{for(const i of this.config.routes)if("/"===i.path||s.pathname.startsWith(i.path))return r=("/"===i.path?s.pathname:s.pathname.replace(new RegExp("^"+i.path.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")),""))+(s.search||""),void await this.proxyRequest(e,t,i.port,r,i.name);this.serveErrorPage(t,"404",404)}}),this.server.listen(this.config.server.port,this.config.server.host||"localhost",()=>{this.log("info","代理服务器启动成功!"),this.log("info","监听端口: "+this.config.server.port),this.config.server.domain&&this.log("info","域名: "+this.config.server.domain),this.log("info","━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"),this.config.routes.forEach(e=>{this.log("info",`路由: ${e.path} → localhost:`+e.port)}),this.log("info","━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");var e=this.config.routes.length;this.log("info",`成功配置 ${e} 个路由`)}),this.server.on("error",e=>{this.log("error","服务器启动失败: "+e.message),process.exit(1)})}serveErrorPage(e,t,r){var s=this.config.errors[t];if(s){s=path.resolve(__dirname,s);if(fs.existsSync(s))try{var o=fs.readFileSync(s,"utf-8");return e.writeHead(r,{"Content-Type":"text/html; charset=utf-8"}),void e.end(o)}catch(e){this.log("error","读取错误页面失败: "+e.message)}}e.writeHead(r,{"Content-Type":"application/json"}),e.end(JSON.stringify({error:t,message:`错误 ${r}: `+t,timestamp:(new Date).toISOString()}))}setupGracefulShutdown(){var e=()=>{this.server?this.server.close(()=>{process.exit(0)}):process.exit(0)};process.on("SIGINT",e),process.on("SIGTERM",e)}reload(){this.loadConfig(),this.server?this.server.close(()=>{this.startServer()}):this.startServer()}}console.log("🌟 启动配置驱动的代理服务器..."),new ConfigDrivenProxyServer;